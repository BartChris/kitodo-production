<!--
 *
 * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
 *
 * This file is part of the Kitodo project.
 *
 * It is licensed under GNU General Public License version 3 or later.
 *
 * For the full copyright and license information, please read the
 * GPL3-License.txt file that was distributed with this source code.
 *
-->

<ui:composition
        template="/WEB-INF/templates/baseEditView.xhtml"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:p="http://primefaces.org/ui">
    <f:metadata>
        <f:viewParam name="id"/>
        <f:viewAction action="#{BenutzergruppenForm.loadUserGroup(id)}"/>
    </f:metadata>

    <ui:param name="isEditMode"
              value="#{BenutzergruppenForm.userGroup.id ne null and SecurityAccessController.isAdminOrHasAuthorityToEditUserGroup(id)}"/>
    <ui:param name="isCreateMode"
              value="#{BenutzergruppenForm.userGroup.id eq null and SecurityAccessController.isAdminOrHasAuthorityGlobalOrForAnyClient('addUserGroup')}"/>
    <ui:param name="isViewMode"
              value="#{not isEditMode and not isCreateMode}"/>

    <ui:define name="contentHeader">
        <h:outputScript name="js/save.js" target="body" />
        <script>
            window.onload = function () {checkForm('editForm')};
        </script>
        <h3>
            <h:outputText value="#{msgs.userGroupEdit} (#{BenutzergruppenForm.userGroup.title})"
                          rendered="#{isEditMode}"/>
            <h:outputText value="#{msgs.neueBenutzergruppeAnlegen}"
                          rendered="#{isCreateMode}"/>
            <h:outputText value="#{msgs.userGroupView} (#{BenutzergruppenForm.userGroup.title})"
                          rendered="#{isViewMode}"/>
        </h3>
        <p:commandButton id="save"
                         widgetVar="save"
                         rendered="#{isEditMode || isCreateMode}"
                         value="#{msgs.save}"
                         action="#{BenutzergruppenForm.save}"
                         process="editForm:usergroupTabView:authoritiesGlobalPick,
                                  editForm:usergroupTabView:authoritiesClientPick,
                                  editForm:usergroupTabView:titleInput,
                                  editForm:usergroupTabView:authoritiesProjectPick"
                         icon="fa fa-floppy-o fa-lg"
                         iconPos="right"
                         styleClass="button-filled-blue"
                         onclick="setConfirmUnload(false);PF('notifications').renderMessage({
                                        'summary':'#{msgs.userGroupSaving}',
                                        'detail':'#{msgs.youWillBeRedirected}',
                                        'severity':'info'});"
                         disabled="#{BenutzergruppenForm.saveDisabled}"
                         update="notifications"/>
        <p:commandButton id="saveButtonToggler"
                         actionListener="#{BenutzergruppenForm.setSaveDisabled(false)}"
                         update="save"
                         style="display:none;"/>
        <p:button id="cancel" value="#{msgs.cancel}" onclick="setConfirmUnload(false);"
                  outcome="users.jsf?id=#{BenutzerverwaltungForm.activeTabIndex}"
                  icon="fa fa-times fa-lg" iconPos="right" styleClass="secondary-button"/>
    </ui:define>

    <ui:define name="pageTabView">
        <p:tabView id="usergroupTabView">
            <p:tab id="usergroupTab" title="#{msgs.details}">
                <p:panelGrid columns="1" layout="grid">
                    <p:row>
                        <div>
                            <p:outputLabel for="titleInput" value="#{msgs.title}"/>
                            <p:inputText id="titleInput"
                                         class="input"
                                         disabled="#{isViewMode}"
                                         value="#{BenutzergruppenForm.userGroup.title}"
                                         placeholder="#{msgs.title}"
                                         required="#{empty param['editForm:saveButtonToggler']}"/>
                        </div>
                        <div>
                            <p:panelGrid columns="3" layout="grid">
                                <!--global authorities-->
                                <h:panelGroup>
                                    <h3>
                                        <h:outputText value="#{msgs.authoritiesGlobal}"/>
                                    </h3>
                                    <div style="visibility: hidden;margin-top: 15px">
                                        <p:outputLabel for="hiddenSelect" value="hidden"/>
                                        <p:selectOneMenu id="hiddenSelect" value="hidden"/>
                                    </div>
                                    <p:pickList id="authoritiesGlobalPick"
                                                showSourceFilter="true" showTargetFilter="true"
                                                filterMatchMode="contains"
                                                responsive="true"
                                                disabled="#{isViewMode}"
                                                value="#{BenutzergruppenForm.authorities}"
                                                converter="#{authorityConverter}"
                                                var="authority" itemLabel="#{authority.title}"
                                                onTransfer="toggleSave()"
                                                itemValue="#{authority}">
                                        <f:facet name="sourceCaption"
                                                 style="color: #000;">#{msgs.available}</f:facet>
                                        <f:facet name="targetCaption"
                                                 style="color: #000;">#{msgs.assigned}</f:facet>
                                    </p:pickList>
                                </h:panelGroup>

                                <!--client authorities-->
                                <h:panelGroup rendered="#{BenutzergruppenForm.clientsAvailable}">
                                    <h3>
                                        <h:outputText value="#{msgs.authoritiesClient}"/>
                                    </h3>
                                    <div style="margin-top: 15px">
                                        <p:outputLabel for="clientSelect" value="#{msgs.client}"/>
                                        <p:selectOneMenu id="clientSelect"
                                                         converter="#{clientConverter}"
                                                         value="#{BenutzergruppenForm.selectedClient}">
                                            <f:selectItems value="#{BenutzergruppenForm.clients}" var="client"
                                                           itemValue="#{client}"
                                                           itemLabel="#{client.name}"/>
                                            <p:ajax event="change"
                                                    update="authoritiesClientPick"
                                                    oncomplete="toggleSave()"
                                            />
                                        </p:selectOneMenu>
                                    </div>
                                    <p:pickList id="authoritiesClientPick"
                                                value="#{BenutzergruppenForm.authoritiesByCurrentClient}"
                                                converter="#{authorityConverter}"
                                                var="authority"
                                                disabled="#{isViewMode}"
                                                showSourceFilter="true" showTargetFilter="true"
                                                filterMatchMode="contains"
                                                responsive="true"
                                                onTransfer="toggleSave()"
                                                itemLabel="#{authority.title}"
                                                itemValue="#{authority}">
                                        <f:facet name="sourceCaption"
                                                 style="color: #000;">#{msgs.available}</f:facet>
                                        <f:facet name="targetCaption"
                                                 style="color: #000;">#{msgs.assigned}</f:facet>
                                        <p:ajax event="transfer"/>
                                    </p:pickList>
                                </h:panelGroup>
                                <!--project authorities-->
                                <h:panelGroup rendered="#{BenutzergruppenForm.projectsAvailable}">
                                    <h3>
                                        <h:outputText value="#{msgs.authoritiesProject}"/>
                                    </h3>
                                    <div style="margin-top: 15px">
                                        <p:outputLabel for="projectSelect" value="#{msgs.project}"/>
                                        <p:selectOneMenu id="projectSelect"
                                                         converter="#{projectConverter}"
                                                         value="#{BenutzergruppenForm.selectedProject}">
                                            <f:selectItems value="#{BenutzergruppenForm.projects}" var="project"
                                                           itemValue="#{project}"
                                                           itemLabel="#{project.title}"/>
                                            <p:ajax event="change"
                                                    update="authoritiesProjectPick"
                                                    oncomplete="toggleSave()"/>
                                        </p:selectOneMenu>
                                    </div>
                                    <p:pickList id="authoritiesProjectPick"
                                                value="#{BenutzergruppenForm.authoritiesByCurrentProject}"
                                                converter="#{authorityConverter}"
                                                showSourceFilter="true" showTargetFilter="true"
                                                disabled="#{isViewMode}"
                                                filterMatchMode="contains"
                                                responsive="true"
                                                var="authority"
                                                onTransfer="toggleSave()"
                                                itemLabel="#{authority.title}"
                                                itemValue="#{authority}">
                                        <f:facet name="sourceCaption"
                                                 style="color: #000;">#{msgs.available}</f:facet>
                                        <f:facet name="targetCaption"
                                                 style="color: #000;">#{msgs.assigned}</f:facet>
                                        <p:ajax event="transfer"/>
                                    </p:pickList>
                                </h:panelGroup>
                            </p:panelGrid>
                        </div>
                    </p:row>
                    <p:row/>
                </p:panelGrid>
            </p:tab>
        </p:tabView>
    </ui:define>

    <ui:define name="breadcrumbs">
        <li><h:link value="#{msgs.startPage}" outcome="start"/></li>
        <li><h:link value="#{msgs.users}" outcome="users"/></li>
        <li>
            <a href="">
                <ui:fragment rendered="#{isEditMode}">
                    #{msgs.userGroupEdit}
                </ui:fragment>
                <ui:fragment rendered="#{isCreateMode}">
                    #{msgs.newUserGroup}
                </ui:fragment>
                <ui:fragment rendered="#{isViewMode}">
                    #{msgs.userGroupView}
                </ui:fragment>
            </a>
        </li>
    </ui:define>
    <!-- add user groups dialog -->
    <ui:define name="dialog">
        <ui:include src="/WEB-INF/templates/includes/userEdit/userEditPopup.xhtml"/>
    </ui:define>
</ui:composition>
